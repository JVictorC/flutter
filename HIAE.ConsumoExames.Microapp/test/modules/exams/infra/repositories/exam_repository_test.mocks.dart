// Mocks generated by Mockito 5.2.0 from annotations
// in micro_app_consumo_exame/test/modules/exams/infra/repositories/exam_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i12;

import 'package:mockito/mockito.dart' as _i1;

import 'package:micro_app_consumo_exame/core/entities/user_auth_info.dart'
    as _i26;
import 'package:micro_app_consumo_exame/core/infra/datasource/local_storage_datasource_interface.dart'
    as _i25;
import 'package:micro_app_consumo_exame/modules/exams/data/models/exam_evolutive_result_model.dart'
    as _i7;
import 'package:micro_app_consumo_exame/modules/exams/data/models/exam_pdf_result_model.dart'
    as _i5;
import 'package:micro_app_consumo_exame/modules/exams/data/models/image_exam_result_model.dart'
    as _i6;
import 'package:micro_app_consumo_exame/modules/exams/domain/entities/date_exam_entity.dart'
    as _i3;
import 'package:micro_app_consumo_exame/modules/exams/domain/entities/download_exam_entity.dart'
    as _i17;
import 'package:micro_app_consumo_exame/modules/exams/domain/entities/evolutionary_report_request_entity.dart'
    as _i13;
import 'package:micro_app_consumo_exame/modules/exams/domain/entities/evolutionary_report_response_entity.dart'
    as _i2;
import 'package:micro_app_consumo_exame/modules/exams/domain/entities/exams_medical_records_entity.dart'
    as _i14;
import 'package:micro_app_consumo_exame/modules/exams/domain/entities/external_exam_entity.dart'
    as _i8;
import 'package:micro_app_consumo_exame/modules/exams/domain/entities/external_exam_file_entity.dart'
    as _i10;
import 'package:micro_app_consumo_exame/modules/exams/domain/entities/external_exam_file_req_entity.dart'
    as _i22;
import 'package:micro_app_consumo_exame/modules/exams/domain/entities/load_date_exam_entity.dart'
    as _i15;
import 'package:micro_app_consumo_exame/modules/exams/domain/entities/load_exams_entity.dart'
    as _i16;
import 'package:micro_app_consumo_exame/modules/exams/domain/entities/medical_appointment_list_result_exams_entity.dart'
    as _i4;
import 'package:micro_app_consumo_exame/modules/exams/domain/entities/radiation_history_entity.dart'
    as _i23;
import 'package:micro_app_consumo_exame/modules/exams/domain/entities/radiation_history_param_entity.dart'
    as _i24;
import 'package:micro_app_consumo_exame/modules/exams/domain/entities/upload_file_entity.dart'
    as _i21;
import 'package:micro_app_consumo_exame/modules/exams/domain/entities/upload_file_response_entity.dart'
    as _i9;
import 'package:micro_app_consumo_exame/modules/exams/domain/usecases/get_evolutive_result_usecase.dart'
    as _i20;
import 'package:micro_app_consumo_exame/modules/exams/domain/usecases/get_image_result_usecase.dart'
    as _i19;
import 'package:micro_app_consumo_exame/modules/exams/domain/usecases/get_pdf_result_usecase.dart'
    as _i18;
import 'package:micro_app_consumo_exame/modules/exams/infra/datasources/exam_datasource_interface.dart'
    as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEvolutionaryReportExamsEntity_0 extends _i1.Fake
    implements _i2.EvolutionaryReportExamsEntity {}

class _FakeDataExamResponseEntity_1 extends _i1.Fake
    implements _i3.DataExamResponseEntity {}

class _FakeMedicalAppointmentListResultExamsEntity_2 extends _i1.Fake
    implements _i4.MedicalAppointmentListResultExamsEntity {}

class _FakeExamPdfResultModel_3 extends _i1.Fake
    implements _i5.ExamPdfResultModel {}

class _FakeExamImageResultModel_4 extends _i1.Fake
    implements _i6.ExamImageResultModel {}

class _FakeExamEvolutiveResultModel_5 extends _i1.Fake
    implements _i7.ExamEvolutiveResultModel {}

class _FakeExternalExamEntity_6 extends _i1.Fake
    implements _i8.ExternalExamEntity {}

class _FakeUploadFileResponseEntity_7 extends _i1.Fake
    implements _i9.UploadFileResponseEntity {}

class _FakeExternalExamFileEntity_8 extends _i1.Fake
    implements _i10.ExternalExamFileEntity {}

/// A class which mocks [IExamDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIExamDataSource extends _i1.Mock implements _i11.IExamDataSource {
  MockIExamDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i2.EvolutionaryReportExamsEntity> getEvolutionaryReport(
          {_i13.EvolutionaryReportRequestEntity? evolutionaryReportLoad}) =>
      (super.noSuchMethod(
              Invocation.method(#getEvolutionaryReport, [],
                  {#evolutionaryReportLoad: evolutionaryReportLoad}),
              returnValue: Future<_i2.EvolutionaryReportExamsEntity>.value(
                  _FakeEvolutionaryReportExamsEntity_0()))
          as _i12.Future<_i2.EvolutionaryReportExamsEntity>);
  @override
  _i12.Future<bool> removeExternalExam({String? id}) =>
      (super.noSuchMethod(Invocation.method(#removeExternalExam, [], {#id: id}),
          returnValue: Future<bool>.value(false)) as _i12.Future<bool>);
  @override
  _i12.Future<List<_i14.ExamsMedicalRecordsEntity>> getAllExamsMedicalRecords(
          {String? medicalRecords,
          DateTime? dateInitial,
          DateTime? dateFinal}) =>
      (super.noSuchMethod(
              Invocation.method(#getAllExamsMedicalRecords, [], {
                #medicalRecords: medicalRecords,
                #dateInitial: dateInitial,
                #dateFinal: dateFinal
              }),
              returnValue: Future<List<_i14.ExamsMedicalRecordsEntity>>.value(
                  <_i14.ExamsMedicalRecordsEntity>[]))
          as _i12.Future<List<_i14.ExamsMedicalRecordsEntity>>);
  @override
  _i12.Future<_i3.DataExamResponseEntity> getExamsDate(
          {_i15.LoadDateExamEntity? loadDataExamEntity}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getExamsDate, [], {#loadDataExamEntity: loadDataExamEntity}),
              returnValue: Future<_i3.DataExamResponseEntity>.value(
                  _FakeDataExamResponseEntity_1()))
          as _i12.Future<_i3.DataExamResponseEntity>);
  @override
  _i12.Future<_i4.MedicalAppointmentListResultExamsEntity> getExamsDetails(
          {_i16.LoadExamEntity? loadExamEntity}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getExamsDetails, [], {#loadExamEntity: loadExamEntity}),
              returnValue:
                  Future<_i4.MedicalAppointmentListResultExamsEntity>.value(
                      _FakeMedicalAppointmentListResultExamsEntity_2()))
          as _i12.Future<_i4.MedicalAppointmentListResultExamsEntity>);
  @override
  _i12.Future<String> downloadExamsPdf(
          {_i17.DownloadExamEntity? downloadExamEntity}) =>
      (super.noSuchMethod(
          Invocation.method(
              #downloadExamsPdf, [], {#downloadExamEntity: downloadExamEntity}),
          returnValue: Future<String>.value('')) as _i12.Future<String>);
  @override
  _i12.Future<_i5.ExamPdfResultModel> getPdfResult(
          _i18.PdfResultParam? param) =>
      (super.noSuchMethod(Invocation.method(#getPdfResult, [param]),
              returnValue: Future<_i5.ExamPdfResultModel>.value(
                  _FakeExamPdfResultModel_3()))
          as _i12.Future<_i5.ExamPdfResultModel>);
  @override
  _i12.Future<_i6.ExamImageResultModel> getImageExamResult(
          _i19.ExamImageParam? param) =>
      (super.noSuchMethod(Invocation.method(#getImageExamResult, [param]),
              returnValue: Future<_i6.ExamImageResultModel>.value(
                  _FakeExamImageResultModel_4()))
          as _i12.Future<_i6.ExamImageResultModel>);
  @override
  _i12.Future<_i7.ExamEvolutiveResultModel> getEvolutiveResult(
          _i20.EvolutiveParam? param) =>
      (super.noSuchMethod(Invocation.method(#getEvolutiveResult, [param]),
              returnValue: Future<_i7.ExamEvolutiveResultModel>.value(
                  _FakeExamEvolutiveResultModel_5()))
          as _i12.Future<_i7.ExamEvolutiveResultModel>);
  @override
  _i12.Future<_i8.ExternalExamEntity> saveExternalExam(
          {_i8.ExternalExamEntity? externalExamEntity}) =>
      (super.noSuchMethod(
          Invocation.method(
              #saveExternalExam, [], {#externalExamEntity: externalExamEntity}),
          returnValue: Future<_i8.ExternalExamEntity>.value(
              _FakeExternalExamEntity_6())) as _i12
          .Future<_i8.ExternalExamEntity>);
  @override
  _i12.Future<_i9.UploadFileResponseEntity> uploadExternalFile(
          {_i21.UploadFileEntity? uploadFileEntity,
          dynamic Function(int, int)? onSendProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#uploadExternalFile, [], {
                #uploadFileEntity: uploadFileEntity,
                #onSendProgress: onSendProgress
              }),
              returnValue: Future<_i9.UploadFileResponseEntity>.value(
                  _FakeUploadFileResponseEntity_7()))
          as _i12.Future<_i9.UploadFileResponseEntity>);
  @override
  _i12.Future<_i10.ExternalExamFileEntity> getExternalFile(
          {_i22.ExternalExamFileReqEntity? externalExamFileReqEntity}) =>
      (super.noSuchMethod(
              Invocation.method(#getExternalFile, [],
                  {#externalExamFileReqEntity: externalExamFileReqEntity}),
              returnValue: Future<_i10.ExternalExamFileEntity>.value(
                  _FakeExternalExamFileEntity_8()))
          as _i12.Future<_i10.ExternalExamFileEntity>);
  @override
  _i12.Future<List<_i23.RadiationHistoryEntity>> getRadiationHistory(
          {_i24.RadiationHistoryParamEntity? radiationHistoryParamEntity}) =>
      (super.noSuchMethod(
              Invocation.method(#getRadiationHistory, [],
                  {#radiationHistoryParamEntity: radiationHistoryParamEntity}),
              returnValue: Future<List<_i23.RadiationHistoryEntity>>.value(
                  <_i23.RadiationHistoryEntity>[]))
          as _i12.Future<List<_i23.RadiationHistoryEntity>>);
}

/// A class which mocks [ILocalStorageDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockILocalStorageDataSource extends _i1.Mock
    implements _i25.ILocalStorageDataSource {
  MockILocalStorageDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool getFirstEvolutionaryReport() =>
      (super.noSuchMethod(Invocation.method(#getFirstEvolutionaryReport, []),
          returnValue: false) as bool);
  @override
  void setFirstEvolutionaryReport() =>
      super.noSuchMethod(Invocation.method(#setFirstEvolutionaryReport, []),
          returnValueForMissingStub: null);
  @override
  _i12.Future<void> init() => (super.noSuchMethod(Invocation.method(#init, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i12.Future<void>);
  @override
  _i12.Future<_i26.UserAuthInfoEntity?> getUser() =>
      (super.noSuchMethod(Invocation.method(#getUser, []),
              returnValue: Future<_i26.UserAuthInfoEntity?>.value())
          as _i12.Future<_i26.UserAuthInfoEntity?>);
  @override
  _i12.Future<void> setUserOnStorage(_i26.UserAuthInfoEntity? userAuth) =>
      (super.noSuchMethod(Invocation.method(#setUserOnStorage, [userAuth]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i12.Future<void>);
  @override
  bool getTermsCheckedFromLocalStorage() => (super.noSuchMethod(
      Invocation.method(#getTermsCheckedFromLocalStorage, []),
      returnValue: false) as bool);
  @override
  _i12.Future<void> setTermsCheckedOnStorage(bool? isChecked) =>
      (super.noSuchMethod(
              Invocation.method(#setTermsCheckedOnStorage, [isChecked]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i12.Future<void>);
  @override
  String getIdentifier() => (super
          .noSuchMethod(Invocation.method(#getIdentifier, []), returnValue: '')
      as String);
  @override
  _i12.Future<void> saveData({String? key, Map<dynamic, dynamic>? map}) =>
      (super.noSuchMethod(
              Invocation.method(#saveData, [], {#key: key, #map: map}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i12.Future<void>);
  @override
  Map<dynamic, dynamic> getData({String? key}) =>
      (super.noSuchMethod(Invocation.method(#getData, [], {#key: key}),
          returnValue: <dynamic, dynamic>{}) as Map<dynamic, dynamic>);
}
