import '../../domain/entities/exam_entity.dart';

class ExamModel extends ExamEntity {
  ExamModel({
    required String? examId,
    required String? passType,
    required String? passageId,
    required String? examName,
    required String? examCode,
    required String? labCode,
    required int examType,
    required DateTime executionDate,
    required bool available,
    required bool security,
    required String? doctorName,
    required String? doctorIdentity,
    required bool laudo,
    required String? laudoFile,
    required String? place,
    required String? url1,
    required String? url2,
    required String? accessNumber,
    required String? result,
    required int position,
    required int statusResult,
    required String? linesQuantity,
    required String? idMedicalRecords,
    required String? itemCategory,
    required DateTime executionDate2,
    required DateTime? uploadDate,
    required String? labName,
    required String? fileId,
    required String? path,
  }) : super(
          uploadDate: uploadDate,
          passType: passType,
          labName: labName,
          examId: examId,
          passageId: passageId,
          examName: examName,
          examCode: examCode,
          labCode: labCode,
          examType: examType,
          executionDate: executionDate,
          available: available,
          security: security,
          doctorName: doctorName,
          doctorIdentity: doctorIdentity,
          place: place,
          accessNumber: accessNumber,
          result: result,
          position: position,
          statusResult: statusResult,
          linesQuantity: linesQuantity,
          idMedicalRecords: idMedicalRecords,
          itemCategory: itemCategory,
          executionDate2: executionDate2,
          laudo: laudo,
          laudoFile: laudoFile,
          url1: url1,
          url2: url2,
          path: path,
          fileId: fileId,
        );

  factory ExamModel.fromMap(Map<String, dynamic> map) => ExamModel(
        labName: null,
        uploadDate: null,
        passType: map['passType'],
        fileId: null,
        path: null,
        laudo: map['laudo'],
        laudoFile: map['laudoFile'],
        url1: map['url1'],
        url2: map['url2'],
        examId: map['examId'],
        passageId: map['passageId'],
        examName: map['examName'],
        examCode: map['examCode'],
        labCode: map['labCode'],
        examType: map['examType'],
        executionDate: DateTime.parse(map['executionDate']),
        available: map['available'],
        security: map['security'],
        doctorName: map['doctorName'],
        doctorIdentity: map['doctorIdentity'],
        place: map['place'],
        accessNumber: map['accessNumber'],
        result: map['result'],
        position: map['position'],
        statusResult: map['statusResult'],
        linesQuantity: map['linesQuantity'],
        idMedicalRecords: map['idmedicalRecords'],
        itemCategory: map['itemCategory'],
        executionDate2: DateTime.parse(map['executionDate2']),
      );
}
